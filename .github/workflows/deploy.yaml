name: 'Deploy'

on:
  push:
    branches:
      # - 'main'
      - 'feature/turborepo-migration'
    paths:
      - 'apps/**'
      - 'packages/**'

env:
  #  Vercel
  VERCEL_TOKEN: '${{ secrets.VERCEL_TOKEN }}'
  VERCEL_BACKEND_APP_NAME: '${{ secrets.VERCEL_BACKEND_APP_NAME }}'
  VERCEL_BACKEND_ORGANIZATION_ID: '${{ secrets.VERCEL_BACKEND_ORGANIZATION_ID }}'
  VERCEL_BACKEND_PROJECT_ID: '${{ secrets.VERCEL_BACKEND_PROJECT_ID }}'
  VERCEL_ADMIN_APP_NAME: '${{ secrets.VERCEL_ADMIN_APP_NAME }}'
  VERCEL_ADMIN_ORGANIZATION_ID: '${{ secrets.VERCEL_ADMIN_ORGANIZATION_ID }}'
  VERCEL_ADMIN_PROJECT_ID: '${{ secrets.VERCEL_ADMIN_PROJECT_ID }}'
  VERCEL_FRONTEND_APP_NAME: '${{ secrets.VERCEL_FRONTEND_APP_NAME }}'
  VERCEL_FRONTEND_ORGANIZATION_ID: '${{ secrets.VERCEL_FRONTEND_ORGANIZATION_ID }}'
  VERCEL_FRONTEND_PROJECT_ID: '${{ secrets.VERCEL_FRONTEND_PROJECT_ID }}'

  #  Backend
  DATABASE_URL: '${{ secrets.DATABASE_URL }}'
  JWT_SECRET: '${{ secrets.JWT_SECRET }}'
  ADMIN_URL: '${{ secrets.ADMIN_URL }}'
  FRONTEND_URL: '${{ secrets.FRONTEND_URL }}'
  BACKEND_URL: '${{ secrets.BACKEND_URL }}'
  BCRYPT_SALT: '${{ secrets.BCRYPT_SALT }}'

  #  Admin
  NEXT_PUBLIC_BACKEND_URL: '${{ secrets.BACKEND_URL }}'

  #  Frontend

  #  Github
  GITHUB_BASE_URL: 'https://${{ github.repository_owner }}.github.io'

jobs:
  Deploy:
    runs-on: 'ubuntu-latest'

    steps:
      - uses: 'actions/checkout@v3'
      - name: 'Setup node'
        uses: 'actions/setup-node@v3'
        with:
          node-version: 18
      - name: 'Install dependencies'
        run: 'npm install'
#      - name: 'Setup environment'
#        run: 'chmod +x scripts/pipeline/setup_environment.sh && scripts/pipeline/setup_environment.sh'
      - name: 'Update deploy environment'
        run: 'npm run deploy:environment'

      # UPDATE DEPLOY ENVIRONMENT

#      - name: 'Set backend environment variables'
#        uses: 'dkershner6/vercel-set-env-action@v3'
#        with:
#          token: '${{ env.VERCEL_TOKEN }}'
#          projectName: '${{ env.VERCEL_BACKEND_APP_NAME }}'
#          envVariableKeys: '${{ env.BACKEND_ENV_VARIABLES }}'
#      - name: 'Set admin environment variables'
#        uses: 'dkershner6/vercel-set-env-action@v3'
#        with:
#          token: '${{ env.VERCEL_TOKEN }}'
#          projectName: '${{ env.VERCEL_ADMIN_APP_NAME }}'
#          envVariableKeys: '${{ env.ADMIN_ENV_VARIABLES }}'
#      - name: 'Set frontend environment variables'
#        uses: 'dkershner6/vercel-set-env-action@v3'
#        with:
#          token: '${{ env.VERCEL_TOKEN }}'
#          projectName: '${{ env.VERCEL_FRONTEND_APP_NAME }}'
#          envVariableKeys: '${{ env.FRONTEND_ENV_VARIABLES }}'

      # CHECK CHANGED FILES

      - name: 'Check changed files'
        uses: 'dorny/paths-filter@v3'
        id: 'changes-filter'
        with:
          base: '${{ github.ref }}'
          filters: |
            backend:
              - 'apps/backend/**'
            admin:
              - 'apps/admin/**'
            frontend:
              - 'apps/frontend/**'
            packages:
              - 'packages/**'

      # BACKEND

      - name: 'Prepare backend'
        if: steps.changes-filter.outputs.backend == 'true' || steps.changes-filter.outputs.packages == 'true'
        run: 'chmod +x scripts/pipeline/backend/prepare.sh && scripts/pipeline/backend/prepare.sh'
      - name: 'Deploy backend'
        if: steps.changes-filter.outputs.backend == 'true' || steps.changes-filter.outputs.packages == 'true'
        uses: 'amondnet/vercel-action@v20'
        with:
          vercel-token: '${{ env.VERCEL_TOKEN }}'
          vercel-args: '--prod --yes'
          vercel-org-id: '${{ env.VERCEL_BACKEND_ORGANIZATION_ID }}'
          vercel-project-id: '${{ env.VERCEL_BACKEND_PROJECT_ID }}'
      - name: 'Get backend deploy info'
        if: steps.changes-filter.outputs.backend == 'true' || steps.changes-filter.outputs.packages == 'true'
        id: 'backend-build-state'
        uses: 'justincase-jp/vercel-preview-url-alias@0.2.1'
        with:
          vercel_access_token: '${{ env.VERCEL_TOKEN }}'
          vercel_project_id: '${{ env.VERCEL_BACKEND_PROJECT_ID }}'
      - name: 'Check backend build status'
        if: steps.changes-filter.outputs.backend == 'true' || steps.changes-filter.outputs.packages == 'true'
        run: '[[ ${{ steps.backend-build-state.outputs.status }} == "READY" ]] && echo Success build! || exit 1'

      # ADMIN

      - name: 'Prepare admin'
        if: steps.changes-filter.outputs.admin == 'true' || steps.changes-filter.outputs.packages == 'true'
        run: 'chmod +x scripts/pipeline/admin/prepare.sh && scripts/pipeline/admin/prepare.sh'
      - name: 'Deploy admin'
        if: steps.changes-filter.outputs.admin == 'true' || steps.changes-filter.outputs.packages == 'true'
        uses: 'amondnet/vercel-action@v20'
        with:
          vercel-token: '${{ env.VERCEL_TOKEN }}'
          vercel-args: '--prod --yes'
          vercel-org-id: '${{ env.VERCEL_ADMIN_ORGANIZATION_ID }}'
          vercel-project-id: '${{ env.VERCEL_ADMIN_PROJECT_ID }}'
      - name: 'Get admin deploy info'
        if: steps.changes-filter.outputs.admin == 'true' || steps.changes-filter.outputs.packages == 'true'
        id: 'admin-build-state'
        uses: 'justincase-jp/vercel-preview-url-alias@0.2.1'
        with:
          vercel_access_token: '${{ env.VERCEL_TOKEN }}'
          vercel_project_id: '${{ env.VERCEL_ADMIN_PROJECT_ID }}'
      - name: 'Check admin build status'
        if: steps.changes-filter.outputs.admin == 'true' || steps.changes-filter.outputs.packages == 'true'
        run: '[[ ${{ steps.admin-build-state.outputs.status }} == "READY" ]] && echo Success build! || exit 1'

      # FRONTEND

      - name: 'Prepare frontend'
        if: steps.changes-filter.outputs.frontend == 'true' || steps.changes-filter.outputs.packages == 'true'
        run: 'chmod +x scripts/pipeline/frontend/prepare.sh && scripts/pipeline/frontend/prepare.sh'
      - name: 'Deploy frontend'
        if: steps.changes-filter.outputs.frontend == 'true' || steps.changes-filter.outputs.packages == 'true'
        uses: 'amondnet/vercel-action@v20'
        with:
          vercel-token: '${{ env.VERCEL_TOKEN }}'
          vercel-args: '--prod --yes'
          vercel-org-id: '${{ env.VERCEL_FRONTEND_ORGANIZATION_ID }}'
          vercel-project-id: '${{ env.VERCEL_FRONTEND_PROJECT_ID }}'
      - name: 'Get frontend deploy info'
        if: steps.changes-filter.outputs.frontend == 'true' || steps.changes-filter.outputs.packages == 'true'
        id: 'frontend-build-state'
        uses: 'justincase-jp/vercel-preview-url-alias@0.2.1'
        with:
          vercel_access_token: '${{ env.VERCEL_TOKEN }}'
          vercel_project_id: '${{ env.VERCEL_FRONTEND_PROJECT_ID }}'
      - name: 'Check frontend build status'
        if: steps.changes-filter.outputs.frontend == 'true' || steps.changes-filter.outputs.packages == 'true'
        run: '[[ ${{ steps.frontend-build-state.outputs.status }} == "READY" ]] && echo Success build! || exit 1'

        # GITHUB

#      - name: 'Prepare frontend github version'
#        if: steps.changes-filter.outputs.frontend == 'true' || steps.changes-filter.outputs.packages == 'true'
#        run: 'chmod +x scripts/pipeline/github/prepare.sh && scripts/pipeline/github/prepare.sh'
#      - name: 'Deploy frontend github version'
#        if: steps.changes-filter.outputs.frontend == 'true' || steps.changes-filter.outputs.packages == 'true'
#        uses: 'peaceiris/actions-gh-pages@v3'
#        with:
#          github_token: '${{ secrets.GITHUB_TOKEN }}'
#          publish_dir: './apps/frontend/dist/frontend/browser'
