{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/features/telegram/messages/spy-on-request.message.ts"],"sourcesContent":["import { Chat } from 'node-telegram-bot-api';\n\nexport const spyOnRequestMessage = (\n  navigator: Record<string, any>,\n  href: string,\n  authorChat?: Chat,\n) => {\n  const greeting = authorChat?.first_name ? authorChat.first_name : `@${authorChat?.username}`;\n\n  return `\n<pre>\n<b>Spy on request</b> <i>${new Date().toJSON()}</i>\nHey, ${greeting}! Looks like somebody opened website...\n\nPath: ${href}\n\nNavigator:\n<code>${JSON.stringify(navigator, null, 4)}</code>\n</pre>\n  `;\n};\n"],"names":[],"mappings":";;;AAEO,MAAM,sBAAsB,CACjC,WACA,MACA;IAEA,MAAM,WAAW,YAAY,aAAa,WAAW,UAAU,GAAG,CAAC,CAAC,EAAE,YAAY,SAAS,CAAC;IAE5F,OAAO,CAAC;;yBAEe,EAAE,IAAI,OAAO,MAAM,GAAG;KAC1C,EAAE,SAAS;;MAEV,EAAE,KAAK;;;MAGP,EAAE,KAAK,SAAS,CAAC,WAAW,MAAM,GAAG;;EAEzC,CAAC;AACH"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/features/telegram/services/telegram.service.ts"],"sourcesContent":["import { TelegramConfig } from '@/features/telegram/types';\nimport TelegramBot, { Chat } from 'node-telegram-bot-api';\nimport { spyOnRequestMessage } from '@/features/telegram/messages/spy-on-request.message';\n\nexport class TelegramService {\n  private readonly bot: TelegramBot;\n  private authorChat: Chat | undefined;\n\n  constructor(private readonly config: TelegramConfig) {\n    if (!config.token) {\n      throw new Error('Telegram token not provided');\n    }\n\n    this.bot = new TelegramBot(config.token, { polling: true });\n  }\n\n  async spyOnRequest(navigator?: Record<string, any>, href?: string) {\n    if (!this.config.authorId || !navigator || !href) {\n      return;\n    }\n\n    const authorChat = await this.getAuthorChat();\n\n    await this.bot.sendMessage(\n      this.config.authorId,\n      spyOnRequestMessage(navigator, href, authorChat),\n      {\n        disable_notification: true,\n        parse_mode: 'HTML',\n      },\n    );\n  }\n\n  private async getAuthorChat() {\n    if (this.authorChat) {\n      return this.authorChat;\n    }\n\n    const chat = await this.bot.getChat(this.config.authorId ?? '');\n    this.authorChat = chat;\n    return chat;\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAIO,MAAM;;IACM,IAAiB;IAC1B,WAA6B;IAErC,YAAY,AAAiB,MAAsB,CAAE;aAAxB,SAAA;QAC3B,IAAI,CAAC,OAAO,KAAK,EAAE;YACjB,MAAM,IAAI,MAAM;QAClB;QAEA,IAAI,CAAC,GAAG,GAAG,mJAAgB,OAAO,KAAK,EAAE;YAAE,SAAS;QAAK;IAC3D;IAEA,MAAM,aAAa,SAA+B,EAAE,IAAa,EAAE;QACjE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,aAAa,CAAC,MAAM;YAChD;QACF;QAEA,MAAM,aAAa,MAAM,IAAI,CAAC,aAAa;QAE3C,MAAM,IAAI,CAAC,GAAG,CAAC,WAAW,CACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,EACpB,8KAAoB,WAAW,MAAM,aACrC;YACE,sBAAsB;YACtB,YAAY;QACd;IAEJ;IAEA,MAAc,gBAAgB;QAC5B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,OAAO,IAAI,CAAC,UAAU;QACxB;QAEA,MAAM,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI;QAC5D,IAAI,CAAC,UAAU,GAAG;QAClB,OAAO;IACT;AACF"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/features/telegram/services/index.ts"],"sourcesContent":["import { TelegramService } from '@/features/telegram/services/telegram.service';\n\nconsole.log(process.env);\n\nexport const telegramService = new TelegramService({\n  token: process.env.TELEGRAM_API_TOKEN ?? process.env.NEXT_PUBLIC_TELEGRAM_API_TOKEN,\n  authorId: process.env.TELEGRAM_AUTHOR_ID ?? process.env.NEXT_PUBLIC_TELEGRAM_AUTHOR_ID,\n  authorNickname:\n    process.env.TELEGRAM_AUTHOR_NICKNAME ?? process.env.NEXT_PUBLIC_TELEGRAM_AUTHOR_NICKNAME,\n});\n"],"names":[],"mappings":";;;;;;AAEA,QAAQ,GAAG,CAAC,QAAQ,GAAG;AAEhB,MAAM,kBAAkB,kKAAoB;IACjD,OAAO,QAAQ,GAAG,CAAC,kBAAkB;IACrC,UAAU,QAAQ,GAAG,CAAC,kBAAkB;IACxC,gBACE,QAAQ,GAAG,CAAC,wBAAwB;AACxC"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/api/internal/telegram/spy-on-request/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { telegramService } from '@/features/telegram/services';\n\nexport const POST = async (request: NextRequest) => {\n  try {\n    const { navigator, href } = await request.json();\n    await telegramService.spyOnRequest(navigator, href);\n    return NextResponse.json({});\n  } catch (e) {\n    return NextResponse.json({});\n  }\n};\n"],"names":[],"mappings":";;;;;;;;AAGO,MAAM,OAAO,OAAO;IACzB,IAAI;QACF,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,MAAM,QAAQ,IAAI;QAC9C,MAAM,gJAAgB,YAAY,CAAC,WAAW;QAC9C,OAAO,oKAAa,IAAI,CAAC,CAAC;IAC5B,EAAE,OAAO,GAAG;QACV,OAAO,oKAAa,IAAI,CAAC,CAAC;IAC5B;AACF"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}