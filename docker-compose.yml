version: '3'

services:
  mongodb1:
    image: mongo:latest
    restart: on-failure
    ports:
      - '27017:27017'
    networks:
      - private_network
    volumes:
      - mongo_data_1:/data/db
    entrypoint: [ '/usr/bin/mongod', '--replSet', 'platform', '--bind_ip_all', '--port', '27017' ]

  mongodb2:
    image: mongo:latest
    restart: on-failure
    ports:
      - '27018:27018'
    networks:
      - private_network
    volumes:
      - mongo_data_2:/data/db
    entrypoint: [ '/usr/bin/mongod', '--replSet', 'platform', '--bind_ip_all', '--port', '27018' ]

  mongodb3:
    image: mongo:latest
    restart: on-failure
    ports:
      - '27019:27019'
    networks:
      - private_network
    volumes:
      - mongo_data_3:/data/db
    entrypoint: [ '/usr/bin/mongod', '--replSet', 'platform', '--bind_ip_all', '--port', '27019' ]

  mongodb-initializer:
    image: mongo:latest
    depends_on:
      - mongodb1
      - mongodb2
      - mongodb3
    networks:
      - private_network
    volumes:
      - ./scripts:/scripts
    command:
      - /bin/sh
      - -c
      - |
        sleep 2 &&
        chmod +x /scripts/rs_initializer.sh &&
        /scripts/rs_initializer.sh

  backend.identity:
    build:
      context: .
      dockerfile: ./apps/backend.identity/Dockerfile
    restart: on-failure
    environment:
      NODE_ENV: production
      DATABASE_URL: mongodb://mongodb1:27017,mongodb2:27018,mongodb3:27019/platform?replicaSet=platform
      IDENTITY_GRPC_URL: 0.0.0.0:8000
    networks:
      - private_network
    depends_on:
      - mongodb1
      - mongodb2
      - mongodb3

  backend.api-gateway:
    build:
      context: .
      dockerfile: ./apps/backend.api-gateway/Dockerfile
    restart: on-failure
    ports:
      - '5555:5555'
    environment:
      PORT: 5555
      NODE_ENV: production
      DATABASE_URL: mongodb://mongodb1:27017,mongodb2:27018,mongodb3:27019/platform?replicaSet=platform
      IDENTITY_GRPC_URL: backend.identity:8000
    networks:
      - private_network
      - public_network
    depends_on:
      - backend.identity

  admin:
    build:
      context: .
      dockerfile: ./apps/admin/Dockerfile
    restart: on-failure
    ports:
      - '3336:3336'
    environment:
      PORT: 3336
      NODE_ENV: production
      DATABASE_URL: mongodb://mongodb1:27017,mongodb2:27018,mongodb3:27019/platform?replicaSet=platform
      PAYLOAD_SECRET: 12345
    networks:
      - private_network
      - public_network
    depends_on:
      - mongodb1
      - mongodb2
      - mongodb3
#      - backend.api-gateway

#  frontend:
#    build:
#      context: .
#      dockerfile: ./apps/frontend/Dockerfile
#    restart: always
#    ports:
#      - '${PORT:-3000}:3000'
#    environment:
#      NEXT_PUBLIC_BACKEND_URL: http://backend:5555
#    networks:
#      - app_network
#    depends_on:
#      - backend

networks:
  private_network:
  public_network:
    driver: bridge

volumes:
  mongo_data_1:
  mongo_data_2:
  mongo_data_3:
