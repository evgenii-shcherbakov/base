{
  "scripts": {
    "alias": "node scripts/paths/generate-path-configs.js",
    "prepare:admin": "npx merge-packages admin/package.json shared/package.json package.json --output package.json",
    "prepare:backend": "npx merge-packages backend/package.json shared/package.json package.json --output package.json",
    "prepare:frontend": "npx merge-packages frontend/package.json shared/package.json package.json --output package.json",
    "init:admin": "cd admin && npm install && cd ..",
    "init:backend": "cd backend && npm install && cd ..",
    "init:frontend": "cd frontend && npm install && cd ..",
    "init:shared": "cd shared && npm install && cd ..",
    "init": "npm install && npm run init:admin && npm run init:backend && npm run init:frontend && npm run init:shared",
    "omit:admin": "cd admin && npm install --omit=dev && cd ..",
    "omit:backend": "cd backend && npm install --omit=dev && cd ..",
    "omit:frontend": "cd frontend && npm install --omit=dev && cd ..",
    "dev:admin": "cd admin && npm run dev",
    "dev:backend": "cd backend && npm run start:dev",
    "dev:frontend": "cd frontend && npm run start",
    "build:admin": "cd admin && npm run build && cd ..",
    "build:backend": "cd backend && npm run build && cd ..",
    "build:frontend": "cd frontend && npm run build && cd ..",
    "start:admin": "cd admin && npm run start",
    "start:backend": "cd backend && npm run start:prod",
    "start:frontend": "cd frontend && npm run ssr",
    "deploy:install:admin": "npm run prepare:admin && npm install",
    "deploy:install:backend": "npm run prepare:backend && npm install && cp package.json backend/package.json",
    "deploy:install:frontend": "npm run prepare:frontend && npm install && cp package.json frontend/package.json",
    "deploy:build:admin": "cd admin && NODE_ENV=production npm run build",
    "deploy:build:backend": "cd backend && NODE_ENV=production npm run build",
    "deploy:build:frontend": "cd frontend && NODE_ENV=production npm run build"
  }
}
